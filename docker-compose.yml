version: '3.8'

services:
  # Development service with hot reload
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    volumes:
      - .:/app
      - ./logs:/app/logs
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug
    depends_on:
      - db
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Production service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3001:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    volumes:
      - .:/app
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - db
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Test service
  test:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    volumes:
      - .:/app
      - ./logs:/app/logs
    command: poetry run pytest
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    depends_on:
      - db
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend development service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:3000/api/v1
    depends_on:
      - app-dev
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:16
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data: 